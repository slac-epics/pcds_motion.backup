' =============================================================
' ================= XIP PULSE PICKER MCODE ====================
' =============================================================

' Strip comments with stripcomments.py before uploading this!


' ===== LEGACY MCODE VARIABLES FOR IOC COMPATIBILITY =====
VA Ve           ' MCode version. If Ve!=$DVER, MCode uploads
VA Pu           ' Power-Up status flag


' ===== CUSTOM PULSE PICKER VARIABLE DECLARATIONS =====
VA Se           ' PP mode [Se]lect; refer to legend 
VA Sd           ' Status indicator register; refer to legend
VA Sw           ' [Sw]eep distance: # steps to 11.25deg
VA Sr           ' Encoder sweep distance to 11.25deg
VA Dr           ' Encoder [Dr]ift
VA Dl           ' Encoder Drift Limit
VA P0           ' Center (open) position
VA P1           ' Positive closed position (from std MCode)
VA P2           ' Negative closed position
VA N0           ' Center (open) encoder pos
VA N1           ' Positive closed encoder pos
VA N2           ' Negative closed encoder pos
VA Ec           ' Enable error checking (0=OFF, 1=ON)
VA Ns           ' Number of saves, repurposed as PP version #
VA Hb           ' Heartbeat counter
VA Cs           ' Encoder count (C2) shadow register
VA Ud           ' Drift violation: motor drifting in + dir
VA Ld           ' Drift violation: motor drifting in - dir
VA Df           ' Motor position flag (-1/0/1)
VA Mo           ' Magic Offset from home index to P1 in steps

Se=99           ' Ensure that HARD RESET init happens

' ===== PROGRAM START =====
PG 1                ' Enter programming mode, program address 1
  LB SU             ' BUILT-IN MCode START-UP PROGRAM LABEL

  ' ***** INITIALIZATION *****
    ' *** INIT on HARD RESET ONLY ***
    BR Mc, Se=0      ' Skip this section on a soft reset (Se=0)
    Sd=80            ' Signal state change to power-up init
    Ve=4
    Pu=0
    Ns=87            ' PP MCode version
    
    EL=4096          ' 4096 lines * 4 step/line = 16384 enc/rev
    MS=8             ' 8 uS/Step * 200 S/rev = 1600 uS/rev
    EE=0             ' Disable closed-loop: too slow! (~1kHz)
    S3=16,0,1        ' S3 for enc power, active low, sourcing
    O3=1             ' Turn on encoder power
    S4=16,0,0        ' S4 for fan ctrl, active low, sinking
    O4=1             ' Turn on fan power
    S13=60,0,0       ' Set S13 for hi-speed trip input capture
    FC=9             ' Filter S13 for 12.9uS for debouncing
    HT=5             ' Hold current delay time = 5ms
    RC=100           ' Run current = 100%
    HC=5             ' Hold current = 5%
    NE=0             ' Disable numeric enable
    Pu=0             ' Power-up flag de-assertion
    
    Sw=50            ' Sweep distance: 50 steps to 11.25deg
    Sr=512           ' 512 encoder counts to 11.25deg
    Dr=0             ' Encoder [Dr]ift
    Dl=23            ' Drift limit set to 23 encs (0.5 deg)
    P0=0             ' Center (open) position
    P1=P0+Sw         ' Positive closed position
    P2=P0-Sw         ' Negative closed position
    N0=0             ' Center (open) position
    N1=N0+Sr         ' Positive closed position
    N2=N0-Sr         ' Negative closed position
    Cs=C2            ' Encoder counter shadow register
    Ec=1             ' Error checking (default ON)
    Ud=0             ' Reset + violation flag
    Ld=0             ' Reset - violation flag
    Df=99            ' Current position unknown
    
  ' *** INIT on START-UP or mode change ***
  LB Mc
    Sd=81            ' Set state to start-up initialization
    TE=0             ' Disable any trips
    H 100            ' Hold for 100ms
    Hb=0             ' Reset heartbeat
    Se=0             ' Mode Select = 0 ("Waiting for mode")
    Sd=0             ' Signal state change to mode select

  ' ***** MODE SELECT *****
  LB Za             ' Mode Select loop START
    BR Z1, Se=1      ' Branch Z0 if Mode 1: ONE-SHOT
    BR Z2, Se=2      ' Branch Z2 if Mode 2: FLIP-FLOP
    BR Z3, Se=3      ' Branch Z3 if Mode 3: BURST
    BR Z4, Se=4      ' Branch Z4 if Mode 4: Fast Open
    BR Z5, Se=5      ' Branch Z5 if Mode 5: Fast Close
    BR Z7, Se=7      ' Branch Z7 if Mode 7: Home to Index
    IC Hb            ' Increment heartbeat counter
    H 100            ' Hold for 100ms
    BR Za           ' Mode Select loop END


  ' ***** MODE Se 1: ONE-SHOT ***** 
  LB Z1             ' Mode 1: ONE-SHOT
    Sd=10            ' Signal state change to ONE-SHOT init 
    CL V1            ' Switch to ONE-SHOT speeds
    CL X5            ' Ensure that shutter starts off CLOSED
    BR Zg, Df=-1     ' If already in - position, goto Zg
    TC=J1            ' Otherwise in + pos, use J1 ISR
    BR Zh            ' Goto input trip arming
  LB Zg              ' Here because in - position
    TC=J2            ' Use J2 ISR NEG->POS move
  LB Zh
    TE=TE|4          ' Arm the built-in Input Trip
    Sd=11            ' Set state to ONE-SHOT loop
  LB Zb             ' Go into infinite loop, wait for movement
    IC Hb            ' Increment heartbeat counter
    H 100            ' Hold for 100ms
    BR Z5, Se=0      ' If user sets Se to 0, go to mode select
    'BR Zb, Sd<>90    ' If movement not complete, loop
    'Sd=12           ' Signal one-shot complete
    BR Zb           ' Loop back while waiting


  ' ***** MODE Se 2: FLIP-FLOP *****
  LB Z2             ' Mode 2: FLIP-FLOP init
    Sd=20            ' Signal state change to FLIP-FLOP init
    CL V2            ' Switch to FLIP-FLOP speeds
    CL X5            ' Ensure that shutter starts off CLOSED
    BR Ze, Df=-1     ' If already in - position, goto Ze
    TC=J5            ' Otherwise in + pos, use J5 ISR
    BR Zf            ' Goto input trip arming
  LB Ze              ' Here because in - position
    TC=J6            ' Use J6 ISR NEG->POS move
  LB Zf              ' TC has been selected, now we...
    TE=TE|4          ' Arm built-in Input Trip
    Sd=21            ' Signal state change to FLIP-FLOP loop
  LB Zc             ' Go into infinite loop
    IC Hb            ' Increment heartbeat counter
    H 100            ' Hold for 100ms
    BR Z5, Se=0      ' If user sets Se to 0, go to mode select
    'BR Zc, Sd<>90    ' If movement not complete, loop
    Sd=22            ' Signal state is FLIP-FLOP loop (active)
    BR Zc           ' Loop back while waiting


  ' ***** MODE Se 3: BURST *****
  LB Z3             ' Mode 3: BURST init
    Sd=30            ' Signal state change to BURST init
    CL V3            ' Switch to BURST speeds
    TC=J3            ' Run subroutine J3 on Input Trip
    TE=TE|4          ' Arm built-in Input Trip
    Sd=31            ' Signal state change to BURST loop
  LB Zd             ' Go into infinite loop
    IC Hb            ' Increment heartbeat counter
    H 100            ' Hold for 100ms
    BR Z5, Se=0      ' If user sets Se to 0, go to mode select
    BR Zd           ' Loop back while waiting


  ' ***** MODE Se 4: FAST OPEN *****
  LB Z4             ' Mode 4: FAST OPEN
    Sd=40            ' Signal state change to FAST OPEN
    CL V4            ' Switch to FAST OPEN speeds
    CL X4            ' Call blocking move to open position
    Sd=41            ' Signal fast open complete
    BR Mc            ' Go back to mode select

  ' ***** MODE Se 5: FAST CLOSE *****
  LB Z5             ' Mode 5: FAST CLOSE
    Sd=50            ' Signal state change to FAST CLOSE
    CL V5            ' Switch to FAST CLOSE speeds
    CL X5            ' Call blocking move to closed position
    Sd=51            ' Signal fast close complete
    BR Mc            ' Go back to mode select
  
  ' ***** MODE Se 7: HOME TO INDEX MARK *****
  LB Z7             ' Mode 7: HOME TO INDEX MARK
    Sd=70            ' Signal state change to HOME INIT
    CL V9            ' Load homing/alignment speeds
    HI 3             ' Home to index, mode 3 (slew+, creep-)
    H                ' Hold until movement complete
    MR Mo            ' Move by magic offset to P1 position
    H                ' Hold until movement complete
    C1=P1            ' Tell the motor where it is
    C2=N1            ' Tell the encoder where it is
    Cs=N1            ' Shadow copy the encoder reading
    Df=1             ' Relay the shutter status
    Sd=79            ' Signal state change to HOME CPLT
    BR Mc            ' Go back to mode select


' ***** INTERRUPT SERVICE ROUTINES *****
' *** ONE-SHOT mode ISR 1 J1 - POS to NEG move
  LB J1
    MA P2            ' Move to - closed position
    CL X8, Ec=1      ' Check drift at previous + position
    H                ' Hold until movement is complete
    Cs=C2            ' Store current enc in shadow var
    Df=-1            ' Signal at negative position
  RT                ' Return


' *** ONE-SHOT mode ISR 2 J2 - NEG to POS move
  LB J2
    MA P1            ' Move to + closed position
    CL X9, Ec=1      ' Check drift at previous - position
    H                ' Hold until movement is complete
    Cs=C2            ' Store current enc in shadow var
    Df=1             ' Signal at positive position
   RT               ' Return

' *** BURST mode ISR 1 - OPENING
  LB J3
    'Sd=32            ' Signal OPEN pulse received
    'CL X4            ' Move to open COPIED BELOW
    MA P0            ' Move to the open position
    CL X8, Ec=1      ' Assumed previous pos is + pos
    TC=J4            ' Change so that next ISR is J4
    H                ' Hold until movement is complete
                     ' No shadow storage - open position is
                     ' not used for drift check
    Df=0             ' Signal at open position
    TE=TE|4          ' Re-arm input trip
  RT                ' Return

' *** BURST mode ISR 2 - CLOSING
  LB J4
    'Sd=33            ' Signal CLOSE pulse received
    'CL X1            ' Move to +close COPIED BELOW
    MA P1            ' Move to + closed position
    CL X9, Ec=1      ' Check drift at previous - position
    TC=J3            ' Change so that next ISR is J3
    H                ' Hold until movement is complete
    Cs=C2            ' Store current enc in shadow variable
    Df=1             ' Signal at positive position
    TE=TE|4          ' Re-arm input trip
  RT                ' Return

' *** FLIP-FLOP mode ISR 1 J5 - POS to NEG move
  LB J5
    MA P2            ' Move to - closed position
    CL X8, Ec=1      ' Check drift at previous + position
    TC=J6            ' Change so that next ISR is J6
    H                ' Hold until movement is complete
    Cs=C2            ' Store current enc in shadow var
    Df=-1            ' Signal at negative position
    TE=TE|4          ' Re-arm input trip
  RT                ' Return

' *** FLIP-FLOP mode ISR 2 J6 - NEG to POS move
  LB J6
    MA P1            ' Move to + closed position
    CL X9, Ec=1      ' Check drift at previous - position
    TC=J5            ' Change so that next ISR is J5
    H                ' Hold until movement is complete
    Cs=C2            ' Store current enc in shadow var
    Df=1             ' Signal at positive position
    TE=TE|4          ' Re-arm input trip
  RT                ' Return

' ***** MOVEMENT SUBROUTINES *****
' *** BLOCKING TOGGLE between one 'off' pos and the other ***
  LB X0
    BR Xa, Df=1      ' If in the + pos, move to the -
    MA P1            ' Else, move to the + position
    CL X9, Ec=1      ' Check drift at previous - position
    H                ' Hold until movement is complete
    Df=1             ' Signal at positive position
    BR Xb            ' Branch to end of subroutine
  LB Xa             ' Here because in the positive position
    MA P2            ' Move to the negative position
    CL X8, Ec=1      ' Check drift at previous + position
    H                ' Hold until movement is complete
    Df=-1            ' Signal at negative position
  LB Xb             ' End of subroutine
    Cs=C2            ' Store current enc in shadow variable
    'Sd=90            ' Signal movement complete
  RT                ' Return

' *** BLOCKING MOVE to POSITIVE CLOSED position ***
  LB X1
    MA P1            ' Move to + closed postition
    CL X9, Ec=1      ' Check drift at previous - position
    H                ' Hold until movement is complete
    Cs=C2            ' Store current enc in shadow variable
    Df=1             ' Signal at positive position
    'Sd=91            ' Signal movement complete to + pos
  RT                ' Return

' *** BLOCKING MOVE to NEGATIVE CLOSED position ***
  LB X2
    MA P2            ' Move to - closed position
    CL X8, Ec=1      ' Check drift at previous + position
    H                ' Hold until movement is complete
    Cs=C2            ' Store current enc in shadow variable
    Df=-1            ' Signal at negative position
    'Sd=92            ' Signal movement complete to - pos
  RT                ' Return

' *** BLOCKING MOVE to OPEN position ***
  LB X4
    MA P0            ' Move to the open position
    CL X8, Ec=1      ' Assumed previous pos is + pos
    H                ' Hold until movement is complete
                     ' No shadow storage - open position is
                     ' not used for drift check
    Df=0             ' Signal at open position
    'Sd=94            ' Signal movement complete to open pos
  RT                ' Return

' *** BLOCKING MOVE to any CLOSED position ***
  LB X5
    BR Xc, Df=1      ' Do not move if already in + pos
    BR Xc, Df=-1     ' Do not move if already in - pos
    BR X1            ' Otherwise, move to + closed pos
  LB Xc
    'Sd=95            ' Signal already in closed position
  RT                ' Return
  
' *** REALIGN by computing new open-loop position ***
  LB X7
    VA L1            ' Local var 1, dividend
    VA L2            ' Local var 2, divisor
    L1=C2*EL*8       ' Compute dividend
    L2=MS*200        ' Compute divisor
    C1=L1/L2         ' Compute & store new steps pos
    RT              ' Return


' *** CHECK FOR DRIFT at positive closed position ***
  LB X8
    BR Xd, Df<>1     ' Skip the routine if pos was not P1
    Dr=N1-Cs         ' + Dr indicates slippage
    BR Xd, Dr<Dl     ' Skip to end if Dr in spec
    Ld=1             ' Otherwise, set violation flag
                     ' motor drifting in - direction
  LB Xd
  RT                ' Return

' *** CHECK FOR DRIFT at negative closed position ***
  LB X9
    BR Xe, Df<>-1    ' Skip the routine if pos was not P2
    Dr=Cs-N2         ' + Dr indicates slippage
    BR Xe, Dr<Dl     ' Skip to end if Dr in spec
    Ud=1             ' Otherwise, set violation flag
                     ' motor drifting in + direction
  LB Xe
  RT                ' Return


' ***** VELOCITY, ACCELERATION LOADING SUBROUTINES *****
' CL any of these subroutines to load various V/A profiles

' *** Set MAXIMUM velocity and acceleration ***
  LB V0
    VI=5300          ' TODO further tuning
    VM=156250
    A=1875000
    D=A
  RT                ' Return

' *** Set ONE-SHOT velocity and acceleration ***
  LB V1
    VI=10000         ' TODO further tuning
    VM=10000
    A=1875000
    D=A
  RT

' *** Set FLIP-FLOP velocity and acceleration ***
  LB V2
    VI=10000         ' TODO further tuning
    VM=10000
    A=1875000
    D=A
  RT

' *** Set BURST velocity and acceleration ***
  LB V3
    BR V0            ' Use MAXIMUM TODO tuning

' *** Set FAST OPEN velocity and acceleration ***
  LB V4
    BR V0            ' Use MAXIMUM TODO tuning

' *** Set FAST CLOSE velocity and acceleration ***
  LB V5
    BR V4            ' Use same as FAST OPEN

' *** Set REALIGNMENT velocity and acceleration
  LB V9
    VI=640
    VM=2560
    A=640
    D=A
  RT                ' Return
    
    
E                   ' Program End
' ===== PROGRAM END =====

PG                  ' End programming mode
